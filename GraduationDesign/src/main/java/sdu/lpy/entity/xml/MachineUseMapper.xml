<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sdu.lpy.dao.MachineUseMapper">
  <resultMap id="BaseResultMap" type="sdu.lpy.entity.MachineUse">
    <id column="machine_id" jdbcType="VARCHAR" property="machineId" />
    <result column="vip_id" jdbcType="VARCHAR" property="vipId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="cost_time" jdbcType="INTEGER" property="costTime" />
    <result column="calorie_cost" jdbcType="DOUBLE" property="calorieCost" />
  </resultMap>
  <sql id="Base_Column_List">
    machine_id, vip_id, start_time, end_time, cost_time, calorie_cost
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from machine_use
    where machine_id = #{machineId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from machine_use
    where machine_id = #{machineId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="sdu.lpy.entity.MachineUse">
    insert into machine_use (machine_id, vip_id, start_time, 
      end_time, cost_time, calorie_cost
      )
    values (#{machineId,jdbcType=VARCHAR}, #{vipId,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{costTime,jdbcType=INTEGER}, #{calorieCost,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="sdu.lpy.entity.MachineUse">
    insert into machine_use
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="machineId != null">
        machine_id,
      </if>
      <if test="vipId != null">
        vip_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="costTime != null">
        cost_time,
      </if>
      <if test="calorieCost != null">
        calorie_cost,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="machineId != null">
        #{machineId,jdbcType=VARCHAR},
      </if>
      <if test="vipId != null">
        #{vipId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="costTime != null">
        #{costTime,jdbcType=INTEGER},
      </if>
      <if test="calorieCost != null">
        #{calorieCost,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="sdu.lpy.entity.MachineUse">
    update machine_use
    <set>
      <if test="vipId != null">
        vip_id = #{vipId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="costTime != null">
        cost_time = #{costTime,jdbcType=INTEGER},
      </if>
      <if test="calorieCost != null">
        calorie_cost = #{calorieCost,jdbcType=DOUBLE},
      </if>
    </set>
    where machine_id = #{machineId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="sdu.lpy.entity.MachineUse">
    update machine_use
    set vip_id = #{vipId,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      cost_time = #{costTime,jdbcType=INTEGER},
      calorie_cost = #{calorieCost,jdbcType=DOUBLE}
    where machine_id = #{machineId,jdbcType=VARCHAR}
  </update>
</mapper>